arch: amd64

language: python

cache: pip

jobs:
  include:
    - name: "Python 3.8 on Xenial Linux"
      os: linux
      python: 3.8
      dist: xenial
      addons:
        apt:
          packages:
            - python3-tk
      before_install:
        - wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
        - sudo apt-get install apt-transport-https
        - echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list
        - sudo apt-get update && sudo apt-get install elasticsearch kibana
        - virtualenv -p python twitter-sentiment
        - source twitter-sentiment/bin/activate
    - name: "Python 3.8 on macOS 10.15"
      os: osx
      osx_image: xcode11.6
      language: shell
      cache:
        directories:
          - $HOME/Library/Caches/Homebrew
          - /usr/local/Homebrew
      before_install:
        - brew tap elastic/tap
        - brew install elastic/tap/elasticsearch-full
        - brew install elastic/tap/kibana-full
        - python3 -m pip install virtualenv
        - python3 -m virtualenv twitter-sentiment
        - source twitter-sentiment/bin/activate
    - name: "Python 3.8 on Windows 10"
      os: windows
      language: shell
      env: PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python --version 3.8.0
        - python -m pip install virtualenv
        - python -m virtualenv twitter-sentiment
        - source twitter-sentiment/Scripts/activate

before_install:
  - pip3 install --upgrade pip

before_cache:
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew cleanup; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then find /usr/local/Homebrew \! -regex ".+\.git.+" -delete; fi

install:
  - pip install python-dotenv
  - pip install flask
  - pip install tweepy
  - pip install textblob
  - pip install coverage
  - pip install pytest
  - pip install pytest-cov
  - pip install matplotlib
  - pip install elasticsearch

script:
  - ./tests/environment_variables.sh
  - coverage run -m pytest -v
  - coverage report -m
  - coverage xml

after_success:
  - bash <(curl -s https://codecov.io/bash) -f tests/coverage/coverage.xml

notifications:
  email:
    recipients:
      - "saurab.mish@gmail.com"
    on_success: never
    on_failure: always
